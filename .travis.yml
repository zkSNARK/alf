dist: xenial
language:
  - cpp
  - python # python is only used to build docs

python:
  3.8

compiler:
  - clang
  - gcc
  
# the install step will take care of deploying a newer cmake version
install:
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/LatestRelease/cmake-3.17.0-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.17.0-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.17.0-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

  - pip install --user sphinx sphinx_rtd_theme sphinxcontrib-bibtex


script:
  - export CC=gcc-9
  - export CXX=g++-9
  - g++ -v
  - cmake --version
  - mkdir build
  - cd build
  - cmake ..
  - cmake  --build .
  - ./tests/test
  - cd ..
  - ls


#install:
##   - pip install --user -r requirements.txt
##   - pip install .
# - pip install --user sphinx sphinx_rtd_theme sphinxcontrib-bibtex

os: linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-9

#script:
#  - export CC=gcc-9
#  - export CXX=g++-9
#  - cmake --version
#  - cmake CMakeLists.txt
#  - cmake  --build . --target test
##   - make test
#  - cd docs && make html  # build doc

#before_deploy: touch build/html/.nojekyll

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable in travis portal
  keep-history: true
#   local-dir: docs/build/html
  target-branch: gh-pages
  on:
    condition: "$CC = g++"
    branch:
      - master  # updates from this branch will trigger deploy
